{"uid":"574af4ea1cc95e61","name":"Delete a single insurance record","fullName":"All Endponts for QA/Insurance - new#Delete a single insurance record","historyId":"d0e8d7a55ca29eb70898013dd3ca68b8:6e252a9985e1add95b7b2f0ba759c4f6","time":{"start":1753722858128,"stop":1753722858175,"duration":47},"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753722858173,"stop":1753722858173,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:73)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Invalid ID error message is returned","time":{"start":1753722858173,"stop":1753722858173,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Admin with email already exists'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Admin with email already exists'\n   at Object.eval sandbox-script.js:2:73)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"df8080db20762746","name":"Request Headers","source":"df8080db20762746.json","type":"application/json","size":337},{"uid":"8bbdad483d2ffd1b","name":"Response Headers","source":"8bbdad483d2ffd1b.json","type":"application/json","size":1036},{"uid":"91e168bd90dde6b6","name":"Response Body","source":"91e168bd90dde6b6.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2446-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Insurance - new"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"DELETE - https://staging.yemert.co/api/v1/yemert/secure/insurance/insuranceId"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"3e9cff523414913","reportUrl":"https://Yemert.github.io/qa-test/24//#testresult/3e9cff523414913","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753722672570,"stop":1753722672627,"duration":57}},{"uid":"d3fb4925bcf7d792","reportUrl":"https://Yemert.github.io/qa-test/23//#testresult/d3fb4925bcf7d792","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753722488551,"stop":1753722488647,"duration":96}},{"uid":"a8997c801cca0022","reportUrl":"https://Yemert.github.io/qa-test/22//#testresult/a8997c801cca0022","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753720532302,"stop":1753720532327,"duration":25}},{"uid":"8761e23b91f9b8f4","reportUrl":"https://Yemert.github.io/qa-test/21//#testresult/8761e23b91f9b8f4","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753720345474,"stop":1753720345498,"duration":24}},{"uid":"265f4d61143e899c","reportUrl":"https://Yemert.github.io/qa-test/20//#testresult/265f4d61143e899c","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753654318569,"stop":1753654318614,"duration":45}},{"uid":"5450f6414edf844f","reportUrl":"https://Yemert.github.io/qa-test/19//#testresult/5450f6414edf844f","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753653976613,"stop":1753653976709,"duration":96}}]},"tags":[]},"source":"574af4ea1cc95e61.json","parameterValues":["DELETE - https://staging.yemert.co/api/v1/yemert/secure/insurance/insuranceId","401"]}