{"uid":"fb2dfcbcfab1fe81","name":"Update a specific farmer Insurance - successful","fullName":"All Endponts for QA/Secure/Insurance#Update a specific farmer Insurance - successful","historyId":"b8db03b30dc412d9647d6afafa31f5a8:bec46d3caeffeda16b3803e61bb23d66","time":{"start":1753728977661,"stop":1753728977692,"duration":31},"status":"failed","statusMessage":"Status code should be 400, Error related to missing farmer is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Error related to missing farmer is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753728977690,"stop":1753728977690,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:57)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Error related to missing farmer is returned","time":{"start":1753728977690,"stop":1753728977690,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Insurance ID is required'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Insurance ID is required'\n   at Object.eval sandbox-script.js:2:57)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"ab9fa663e8ed8928","name":"Request Headers","source":"ab9fa663e8ed8928.json","type":"application/json","size":406},{"uid":"c9beaa83294c41bc","name":"Request Body","source":"c9beaa83294c41bc.txt","type":"text/plain","size":136},{"uid":"f0f4ee8263b5f722","name":"Response Headers","source":"f0f4ee8263b5f722.json","type":"application/json","size":1036},{"uid":"b70773a13b97ae4c","name":"Response Body","source":"b70773a13b97ae4c.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2374-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Secure"},{"name":"subSuite","value":"Insurance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance/3887"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fb2dfcbcfab1fe81.json","parameterValues":["PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance/3887","401"]}