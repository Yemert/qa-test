{"uid":"bd7b709132e0dc96","name":"Update Claims Copy","fullName":"All Endponts for QA/Insurance - new#Update Claims Copy","historyId":"807265fbc6e9a930ceed405eee698e7e:a4f4c69fb94d667ade8d03a54bf47a43","time":{"start":1753653976711,"stop":1753653976810,"duration":99},"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753653976808,"stop":1753653976808,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:68)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Invalid ID error message is returned","time":{"start":1753653976809,"stop":1753653976809,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Admin with email already exists'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Admin with email already exists'\n   at Object.eval sandbox-script.js:2:68)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"682e7dd3c490ab30","name":"Request Headers","source":"682e7dd3c490ab30.json","type":"application/json","size":405},{"uid":"7b5f53755105b7ed","name":"Request Body","source":"7b5f53755105b7ed.txt","type":"text/plain","size":53},{"uid":"d2729314b454c399","name":"Response Headers","source":"d2729314b454c399.json","type":"application/json","size":1036},{"uid":"a85ae0a96f198ecb","name":"Response Body","source":"a85ae0a96f198ecb.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2407-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Insurance - new"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://staging.yemert.co/api/v1/farmers/claims/yemertId"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bd7b709132e0dc96.json","parameterValues":["PATCH - https://staging.yemert.co/api/v1/farmers/claims/yemertId","401"]}