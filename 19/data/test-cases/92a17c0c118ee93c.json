{"uid":"92a17c0c118ee93c","name":"Update a single insurance record","fullName":"All Endponts for QA/Insurance - new#Update a single insurance record","historyId":"0d19355a16418f08879bbfd780a20939:336649977b84f152dfc6b2e9a53f6b6d","time":{"start":1753653976314,"stop":1753653976412,"duration":98},"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753653976410,"stop":1753653976410,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:64)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Invalid ID error message is returned","time":{"start":1753653976411,"stop":1753653976411,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Admin with email already exists'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Admin with email already exists'\n   at Object.eval sandbox-script.js:2:64)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"c5e0d4c90ba01b69","name":"Request Headers","source":"c5e0d4c90ba01b69.json","type":"application/json","size":364},{"uid":"b3adc5702bffb600","name":"Response Headers","source":"b3adc5702bffb600.json","type":"application/json","size":1036},{"uid":"d2e0085ed15b6066","name":"Response Body","source":"d2e0085ed15b6066.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2407-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Insurance - new"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"92a17c0c118ee93c.json","parameterValues":["PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance","401"]}