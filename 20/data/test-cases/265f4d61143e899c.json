{"uid":"265f4d61143e899c","name":"Delete a single insurance record","fullName":"All Endponts for QA/Insurance - new#Delete a single insurance record","historyId":"d0e8d7a55ca29eb70898013dd3ca68b8:6e252a9985e1add95b7b2f0ba759c4f6","time":{"start":1753654318569,"stop":1753654318614,"duration":45},"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753654318612,"stop":1753654318612,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Invalid ID error message is returned","time":{"start":1753654318613,"stop":1753654318613,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Admin with email already exists'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Admin with email already exists'\n   at Object.eval sandbox-script.js:2:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"b78bc56df571d7cd","name":"Request Headers","source":"b78bc56df571d7cd.json","type":"application/json","size":337},{"uid":"f914b59ee3bd3c3a","name":"Response Headers","source":"f914b59ee3bd3c3a.json","type":"application/json","size":1036},{"uid":"e57dec39a6fcddd1","name":"Response Body","source":"e57dec39a6fcddd1.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2388-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Insurance - new"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"DELETE - https://staging.yemert.co/api/v1/yemert/secure/insurance/insuranceId"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"5450f6414edf844f","reportUrl":"https://Yemert.github.io/qa-test/19//#testresult/5450f6414edf844f","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753653976613,"stop":1753653976709,"duration":96}}]},"tags":[]},"source":"265f4d61143e899c.json","parameterValues":["DELETE - https://staging.yemert.co/api/v1/yemert/secure/insurance/insuranceId","401"]}