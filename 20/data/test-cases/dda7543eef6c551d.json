{"uid":"dda7543eef6c551d","name":"Delete all claims","fullName":"All Endponts for QA/Farmer/Claims#Delete all claims","historyId":"1921b9866dc297d4e418b329beffd5c8:68eea24dec592e8116f7a4dc349957ae","time":{"start":1753654316990,"stop":1753654317038,"duration":48},"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Invalid ID error message is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753654317034,"stop":1753654317035,"duration":1},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:36)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Invalid ID error message is returned","time":{"start":1753654317035,"stop":1753654317035,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Admin with email already exists'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Admin with email already exists'\n   at Object.eval sandbox-script.js:2:36)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"bde1257a71ec1801","name":"Request Headers","source":"bde1257a71ec1801.json","type":"application/json","size":337},{"uid":"7837cced11229d32","name":"Response Headers","source":"7837cced11229d32.json","type":"application/json","size":1036},{"uid":"bea9c53346c48806","name":"Response Body","source":"bea9c53346c48806.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2388-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Farmer"},{"name":"subSuite","value":"Claims"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"DELETE - https://staging.yemert.co/api/v1/farmers/claims/all"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"764f8e6d39705a46","reportUrl":"https://Yemert.github.io/qa-test/19//#testresult/764f8e6d39705a46","status":"failed","statusDetails":"Status code should be 400, Invalid ID error message is returned","time":{"start":1753653973366,"stop":1753653973467,"duration":101}}]},"tags":[]},"source":"dda7543eef6c551d.json","parameterValues":["DELETE - https://staging.yemert.co/api/v1/farmers/claims/all","401"]}