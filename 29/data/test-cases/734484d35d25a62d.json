{"uid":"734484d35d25a62d","name":"Create  Insurance - no cost of production","fullName":"All Endponts for QA/Secure/Insurance#Create  Insurance - no cost of production","historyId":"2ba5052d06f6e5d300caf1e082dd9163:6c6afc11730fde58589a3c6844f1b998","time":{"start":1753725183468,"stop":1753725183526,"duration":58},"status":"failed","statusMessage":"Status code should be 400, Error related to invalid production cost is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Error related to invalid production cost is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753725183524,"stop":1753725183524,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:47)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Error related to invalid production cost is returned","time":{"start":1753725183524,"stop":1753725183524,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Cost of production is required'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Cost of production is required'\n   at Object.eval sandbox-script.js:2:47)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"b80eafa22f85184e","name":"Request Headers","source":"b80eafa22f85184e.json","type":"application/json","size":406},{"uid":"75dd02d99d4187a0","name":"Request Body","source":"75dd02d99d4187a0.txt","type":"text/plain","size":141},{"uid":"e049e3c0f1d77389","name":"Response Headers","source":"e049e3c0f1d77389.json","type":"application/json","size":1036},{"uid":"7641a8d67b254ebb","name":"Response Body","source":"7641a8d67b254ebb.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2436-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Secure"},{"name":"subSuite","value":"Insurance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://staging.yemert.co/api/v1/yemert/secure/insurance"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":9},"items":[{"uid":"608649c200c61adb","reportUrl":"https://Yemert.github.io/qa-test/28//#testresult/608649c200c61adb","status":"failed","statusDetails":"Status code should be 400, Error related to invalid production cost is returned","time":{"start":1753724996451,"stop":1753724996549,"duration":98}},{"uid":"df48a01d2cc74ab8","reportUrl":"https://Yemert.github.io/qa-test/27//#testresult/df48a01d2cc74ab8","status":"failed","statusDetails":"Status code should be 400, Error related to invalid production cost is returned","time":{"start":1753724805183,"stop":1753724805243,"duration":60}},{"uid":"1d42171b1d4044b5","reportUrl":"https://Yemert.github.io/qa-test/26//#testresult/1d42171b1d4044b5","status":"failed","statusDetails":"Status code should be 400, Error related to invalid production cost is returned","time":{"start":1753723444643,"stop":1753723444668,"duration":25}},{"uid":"71a9cf564c1130cf","reportUrl":"https://Yemert.github.io/qa-test/25//#testresult/71a9cf564c1130cf","status":"passed","time":{"start":1753722856915,"stop":1753722856955,"duration":40}},{"uid":"bd77cd792a4932c0","reportUrl":"https://Yemert.github.io/qa-test/24//#testresult/bd77cd792a4932c0","status":"passed","time":{"start":1753722671019,"stop":1753722671072,"duration":53}},{"uid":"95fc46e4bbdbf1a5","reportUrl":"https://Yemert.github.io/qa-test/23//#testresult/95fc46e4bbdbf1a5","status":"passed","time":{"start":1753722485988,"stop":1753722486083,"duration":95}},{"uid":"607b3e2c08c6c73f","reportUrl":"https://Yemert.github.io/qa-test/22//#testresult/607b3e2c08c6c73f","status":"passed","time":{"start":1753720531638,"stop":1753720531660,"duration":22}},{"uid":"4604ed36dbc45f1e","reportUrl":"https://Yemert.github.io/qa-test/21//#testresult/4604ed36dbc45f1e","status":"passed","time":{"start":1753720344855,"stop":1753720344876,"duration":21}}]},"tags":[]},"source":"734484d35d25a62d.json","parameterValues":["POST - https://staging.yemert.co/api/v1/yemert/secure/insurance","401"]}