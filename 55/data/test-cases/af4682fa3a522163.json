{"uid":"af4682fa3a522163","name":"Update a specific claim for a farmer - successful","fullName":"All Endponts for QA/Secure/Claim#Update a specific claim for a farmer - successful","historyId":"184cb2934e7eb048b31056a1d6f63b95:5a869d324bee8d8d772eef3c30b049aa","time":{"start":1753740472776,"stop":1753740472802,"duration":26},"status":"failed","statusMessage":"Status code should be 200, Claim updated successfully","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 200, Claim updated successfully","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 200","time":{"start":1753740472801,"stop":1753740472801,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Claim updated successfully","time":{"start":1753740472801,"stop":1753740472801,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Claim updated successfully'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Claim updated successfully'\n   at Object.eval sandbox-script.js:2:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"7a338bdba3afd836","name":"Request Headers","source":"7a338bdba3afd836.json","type":"application/json","size":405},{"uid":"d7b7014303c45992","name":"Request Body","source":"d7b7014303c45992.txt","type":"text/plain","size":42},{"uid":"9e175f94e8107db3","name":"Response Headers","source":"9e175f94e8107db3.json","type":"application/json","size":1036},{"uid":"3fce5ecf377e34d5","name":"Response Body","source":"3fce5ecf377e34d5.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2396-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Secure"},{"name":"subSuite","value":"Claim"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://staging.yemert.co/api/v1/yemert/secure/claims/3641"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"d4d4553a5f4ab3f2","reportUrl":"https://Yemert.github.io/qa-test/54//#testresult/d4d4553a5f4ab3f2","status":"failed","statusDetails":"Status code should be 200, Claim updated successfully","time":{"start":1753740287741,"stop":1753740287797,"duration":56}},{"uid":"5e896151a43c1481","reportUrl":"https://Yemert.github.io/qa-test/53//#testresult/5e896151a43c1481","status":"failed","statusDetails":"Status code should be 200, Claim updated successfully","time":{"start":1753739363807,"stop":1753739363835,"duration":28}},{"uid":"ee03bf6bdfa201b8","reportUrl":"https://Yemert.github.io/qa-test/52//#testresult/ee03bf6bdfa201b8","status":"failed","statusDetails":"Status code should be 200, Claim updated successfully","time":{"start":1753739074933,"stop":1753739074978,"duration":45}}]},"tags":[]},"source":"af4682fa3a522163.json","parameterValues":["PATCH - https://staging.yemert.co/api/v1/yemert/secure/claims/3641","401"]}