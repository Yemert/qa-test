# This is a basic workflow to help you get started with Actions

name: Staging API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger support

jobs:
  postman-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Newman and Allure Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-allure
          npm install -g allure-commandline

      - name: Run Newman tests with Allure reporter
        continue-on-error: true
        run: |
          newman run postman-api/yemert-collection.json \
            --environment postman-api/staging.postman_environment.json \
            --reporters cli,allure \
            --reporter-allure-export ./allure-results

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: ./allure-results

      - name: Get timestamp
        id: vars
        run: echo "timestamp=$(date -u +'%Y-%m-%dT%H-%M-%SZ')" >> $GITHUB_OUTPUT


      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          personal_token: ${{ secrets.GHP_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history


#      - name: Generate Allure HTML report
#        run: |
#           allure generate ./allure-results -o ./allure-report

#      - name: Deploy timestamped Allure report to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v4
#        with:
#         personal_token: ${{ secrets.GHP_TOKEN }}
#         publish_dir: ./allure-report
#          destination_dir: reports/allure-report-${{ steps.vars.outputs.timestamp }}
#          publish_branch: gh-pages
#          keep_files: true

      - name: Output GitHub Pages URL
        run: |
          echo "Allure Report URL:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/allure-report-${{ steps.vars.outputs.timestamp }}"

