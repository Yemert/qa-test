{"uid":"26d34c1eb728e84f","name":"Update a specific farmer Insurance - no InsuranceID Copy","fullName":"All Endponts for QA/Secure/Insurance#Update a specific farmer Insurance - no InsuranceID Copy","historyId":"55037e925cab58507ff32c22480a7e9a:bec46d3caeffeda16b3803e61bb23d66","time":{"start":1753728607722,"stop":1753728607768,"duration":46},"status":"failed","statusMessage":"Status code should be 400, Error related to missing farmer is returned","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code should be 400, Error related to missing farmer is returned","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code should be 400","time":{"start":1753728607766,"stop":1753728607766,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:53)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Error related to missing farmer is returned","time":{"start":1753728607766,"stop":1753728607766,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Insurance ID is required'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Insurance ID is required'\n   at Object.eval sandbox-script.js:2:53)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"239a850168246302","name":"Request Headers","source":"239a850168246302.json","type":"application/json","size":406},{"uid":"55cdcd7557da7fb6","name":"Request Body","source":"55cdcd7557da7fb6.txt","type":"text/plain","size":136},{"uid":"970364f7314ac5f5","name":"Response Headers","source":"970364f7314ac5f5.json","type":"application/json","size":1036},{"uid":"766f1c0c0a9528eb","name":"Response Body","source":"766f1c0c0a9528eb.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"pid-2439-worker-main"},{"name":"parentSuite","value":"All Endponts for QA"},{"name":"suite","value":"Secure"},{"name":"subSuite","value":"Insurance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance/3887"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"26d34c1eb728e84f.json","parameterValues":["PATCH - https://staging.yemert.co/api/v1/yemert/secure/insurance/3887","401"]}